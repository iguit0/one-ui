@use 'sass:math';
@import "../../assets/styles/index.scss";

$slice: math.div(1, 7);

.container {
  box-sizing: content-box;
  cursor: pointer;
  width: 1em;
  height: 1em;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  background-size: 0 0;
  background-repeat: no-repeat;
  transition: transform 250ms;
  transition-timing-function: ease-in-out;
  &:active {
    transform: scale(0.9);
  }
  > * {
    flex-shrink: 0;
    box-sizing: border-box;
    width: 0.8em;
    height: #{$slice}em;
    border-radius: #{math.div($slice, 2)}em;
    transition: transform $veryFast, width $veryFast, height $veryFast,
      border-width $veryFast, background-color $veryFast,
      border-radius $veryFast;
    background: var(--mutable-hamburger-background, $digitalBlue);
    background-size: 1em 1em;
    background-repeat: no-repeat;
    border: 0em solid #0000;
    &:nth-child(1) {
      border-top-color: var(--mutable-hamburger-background, $digitalBlue);
    }
    &:nth-child(2) {
      border-right-color: var(--mutable-hamburger-background, $digitalBlue);
    }
    &:nth-child(3) {
      border-bottom-color: var(--mutable-hamburger-background, $digitalBlue);
      border-left-color: var(--mutable-hamburger-background, $digitalBlue);
    }
  }
  & > * {
    background-position-x: -0.1em;
  }
  & > :nth-child(1) {
    background-position-y: #{$slice * -1}em;
  }
  & > :nth-child(2) {
    background-position-y: #{$slice * -3}em;
  }
  & > :nth-child(3) {
    background-position-y: #{$slice * -5}em;
  }

  &.closed {
    > :nth-child(1) {
      transform: translateY(#{$slice * 2}em) rotateZ(-45deg);
    }
    > :nth-child(2) {
      transform: rotateZ(45deg);
    }
    > :nth-child(3) {
      transform: translateY(-#{$slice * 2}em) rotateZ(-45deg);
    }
  }

  &.arrow-up {
    > * {
      width: 0.4em;
    }
    > :nth-child(1) {
      transform: translateX(0.1em) translateY(#{$slice * 2}em) rotateZ(45deg);
    }
    > :nth-child(2) {
      transform: translateX(0.1em) rotateZ(45deg);
    }
    > :nth-child(3) {
      transform: translateX(-0.1em) translateY(-#{$slice * 2}em) rotateZ(-45deg);
    }
  }

  &.arrow-down {
    > * {
      width: 0.4em;
    }
    > :nth-child(1) {
      transform: translateX(0.1em) translateY(#{$slice * 2}em) rotateZ(-45deg);
    }
    > :nth-child(2) {
      transform: translateX(0.1em) rotateZ(-45deg);
    }
    > :nth-child(3) {
      transform: translateX(-0.1em) translateY(-#{$slice * 2}em) rotateZ(45deg);
    }
  }

  &.search {
    > :nth-child(1) {
      $rate: 1.8;
      width: #{$slice * $rate + math.div($slice, 1.35)}em;
      height: #{$slice * $rate + math.div($slice, 1.35)}em;
      border-radius: #{$slice * $rate * 2}em;
      background-color: transparent;
      border: #{math.div($slice, 1.35)}em solid
        var(--mutable-hamburger-background, $digitalBlue);
      transform: translateX(-0.15em);
    }
    > :nth-child(2) {
      transform: translateX(0.12em) translateY(-0.05em) rotateZ(45deg);
      height: #{math.div($slice, 1.35)}em;
      width: 0.55em;
    }
    > :nth-child(3) {
      transform: translateX(0.12em) translateY(-#{($slice * 1.3) + 0.085}em)
        rotateZ(45deg);
      height: #{math.div($slice, 1.35)}em;
      width: 0.55em;
    }
  }

  &.checkmark {
    > :nth-child(1) {
      transform: translateY(#{$slice * 2}em) translateX(-0.178em)
        translateY(0.13em) rotate(45deg);
      height: #{$slice}em;
      width: 0.45em;
    }
    > :nth-child(2) {
      height: #{$slice}em;
      width: 0.7em;
      transform: translateX(0.1em) rotate(-55deg);
    }
    > :nth-child(3) {
      transform: translateY(-#{$slice * 2}em) translateX(0.1em) rotate(-55deg);
      height: #{$slice}em;
      width: 0.7em;
    }
  }

  &.loading {
    $slice: math.div(1, 6);
    @keyframes rotate {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
    animation-name: rotate;
    animation-duration: 1s;
    animation-delay: $veryFast;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    > * {
      background-color: #0000;
      width: #{$slice * 4.5}em;
      height: #{$slice * 4.5}em;
      border-radius: #{$slice * 4.5}em;
      border-width: #{$slice}em;
    }
    > :nth-child(1) {
      transform: translateY(#{$slice * 4.5}em);
    }
    > :nth-child(2) {
      transform: rotateZ(-5deg);
    }
    > :nth-child(3) {
      transform: translateY(-#{$slice * 4.5}em) rotateZ(-95deg);
    }
  }
}
